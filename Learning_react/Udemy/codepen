
<div>
	<label class="label" for="name"> Enter Name </label>
	<input id="name"/>
	<button>Submit</button>
</div>



//for make that when you click the element it selects the target for






console.clear()

const createPolicy = (name, amount) =>{
  return { //Action
    type: 'CREATE_POLICY',
    payload: {
      name:name,
      amount: amount,
    }
    
  };
}

const deletePolicy = (name)=>{
  return{
    type: 'DELETE',
    payload:{
      name:name
    }
  }  
}

const createClaim = (name, amount) => {
  return {
    type:"CREATE_CLAIM",
    payload:{
      name:name,
      amount:amount
    }
  };
}

//Reducers

const claimsHistory = (oldListOfClaims = [], action) => {
  if(action.type === "CREATE_CLAIM"){
    return [...oldListOfClaims, action.payload];
  }
  
  return oldListOfClaims;
}

const accounting = (bagOfMoney=100, action) => {
  if(action.type === "CREATE_CLAIM"){
    return bagOfMoney - action.payload.amount;
  }
  
  else if(action.type === 'CREATE_POLICY'){
    return bagOfMoney + action.payload.amount;
  }
  return bagOfMoney;
}

const policies = (listOfPolicies=[], action) => {
  if(action.type === "CREATE_POLICY"){
    return [...listOfPolicies, action.payload.name]
  }
  else if(action.type === 'DELETE_POLICY'){
    return listOfPolicies.filter((num)=>{return num!== action.payload.name})
  }
  return listOfPolicies;
}

const {createStore, combineReducers} = Redux;

const ourDepartments = combineReducers({
  accounting:accounting,
  claimsHistory:claimsHistory,
  policies:policies
})

const store = createStore(ourDepartments);


store.dispatch(createPolicy('alex', 20));
store.dispatch(createClaim('alex', 100));


console.log(store.getState());
